if page == "Email Settings":
    # settings tab
    st.sidebar.header("Settings")
    st.header("Email Settings")

    # Read current settings from the file
    try:
        with open(SETTINGS_FILE_PATH, "r") as file:
            lines = file.readlines()
            if len(lines) >= 3:
                saved_email = lines[0].strip()
                saved_calculations_time = datetime.datetime.strptime(lines[1].strip(), "%H:%M:%S").time()
                saved_email_time = datetime.datetime.strptime(lines[2].strip(), "%H:%M:%S").time()
            else:
                saved_email = "Not Set"
                saved_calculations_time = DEFAULT_CALCULATION_TIME
                saved_email_time = DEFAULT_EMAIL_TIME
    except FileNotFoundError:
        saved_email = "Not Set"
        saved_calculations_time = DEFAULT_CALCULATION_TIME
        saved_email_time = DEFAULT_EMAIL_TIME

    # email input
    email = st.sidebar.text_input("Your email", EMAIL_ADDRESS)
    st.session_state.email_results = email

    # time input for calculations and email
    calculations_time = st.sidebar.time_input("Set up time of day to calculate positions and balances", DEFAULT_CALCULATION_TIME)
    st.session_state.calculations_time = calculations_time

    email_time = st.sidebar.time_input("Set up time of day to email results", DEFAULT_EMAIL_TIME)
    st.session_state.email_time = email_time

    # control Automation
    control_status = st.sidebar.radio("Email Automation", options=["Active", "Paused"])

    # if save button is clicked...
    if st.sidebar.button("Save"):
        if control_status == "Active":
            # display current settings
            st.write(f"Current Email: {st.session_state.get('email_results', 'Not Set')}")
            st.write(f"Positions and balances will be calculated at {calculations_time.strftime('%I:%M %p')}")
            st.write(f"You will be emailed at {email_time.strftime('%I:%M %p')}")

            # save settings to a file
            with open(SETTINGS_FILE_PATH, "w") as file:
                file.write(f"{st.session_state.email_results}\n")
                file.write(f"{st.session_state.calculations_time.strftime('%H:%M:%S')}\n")
                file.write(f"{st.session_state.email_time.strftime('%H:%M:%S')}\n")
        else:
            st.write("Automation is paused. Set to active to resume.")
            with open(SETTINGS_FILE_PATH, "w") as file:
                file.write("inactive")

        # show success message
        st.sidebar.success("Settings saved successfully.")